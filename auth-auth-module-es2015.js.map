{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/spotify-auth/spotify-auth.component.ts","./src/app/auth/spotify-auth/spotify-auth.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACsB;;;AAE7E,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,yFAAoB,EAAE,CAAC,CAAC;AAM1E,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHjB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEb,iBAAiB,uFAFhB,4DAAY;6FAEb,iBAAiB;cAJ7B,sDAAQ;eAAC;gBACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEW;AACmB;;AAMtE,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBAFV,CAAC,4DAAY,EAAE,sEAAiB,CAAC;mIAEjC,UAAU,mBAHJ,yFAAoB,aACzB,4DAAY,EAAE,sEAAiB;6FAEhC,UAAU;cAJtB,sDAAQ;eAAC;gBACN,YAAY,EAAE,CAAC,yFAAoB,CAAC;gBACpC,OAAO,EAAE,CAAC,4DAAY,EAAE,sEAAiB,CAAC;aAC7C;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGL;;;;AAOtC,MAAM,oBAAoB;IAC7B,YAA2B,WAAwB,EAAU,cAA8B,EAAU,MAAc;QAAxF,gBAAW,GAAX,WAAW,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEhH,QAAQ;QAGX,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACjD,IAAI,MAAM,CAAC,IAAI,EAAE;gBACb,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;aAC9D;iBAAM;gBACH,2CAA2C;gBAC3C,qCAAqC;aACxC;QACL,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,WAAW,CAAC,WAAW;aACzB,IAAI,CACD,6DAAM,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,CACrC;aACA,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC;;wFArBQ,oBAAoB;oGAApB,oBAAoB;QCVjC,qEAAI;QAAA,4EAAmB;QAAA,4DAAK;;6FDUf,oBAAoB;cALhC,uDAAS;eAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC/C","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SpotifyAuthComponent } from './spotify-auth/spotify-auth.component';\r\n\r\nconst routes: Routes = [{ path: 'authorized', component: SpotifyAuthComponent }];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { SpotifyAuthComponent } from './spotify-auth/spotify-auth.component';\r\n\r\n@NgModule({\r\n    declarations: [SpotifyAuthComponent],\r\n    imports: [CommonModule, AuthRoutingModule],\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { filter, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'rbc-spotify-auth',\r\n    templateUrl: './spotify-auth.component.html',\r\n    styleUrls: ['./spotify-auth.component.scss'],\r\n})\r\nexport class SpotifyAuthComponent implements OnInit {\r\n    public constructor(private authService: AuthService, private activatedRoute: ActivatedRoute, private router: Router) {}\r\n\r\n    public ngOnInit(): void {\r\n\r\n\r\n        this.activatedRoute.queryParams.subscribe((params) => {\r\n            if (params.code) {\r\n                this.authService.getAccessToken(params.code, params.state);\r\n            } else {\r\n                // this means they declined or it messed up\r\n                // params should have error and state\r\n            }\r\n        });\r\n\r\n\r\n        this.authService.authorized$\r\n          .pipe(\r\n              filter((authorized) => authorized)\r\n          )\r\n          .subscribe((x) => this.router.navigate(['/']));\r\n    }\r\n}\r\n","<h3>Authorizing&hellip;</h3>"],"sourceRoot":"webpack:///"}