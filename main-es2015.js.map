{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.service.ts","./src/app/auth/models/scopes-builder.ts","./src/app/auth/token.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/models/session.ts","./src/app/phase/open-phase/open-phase.component.ts","./src/app/phase/open-phase/open-phase.component.html","./src/app/phase/reveal-phase/reveal-phase.component.ts","./src/app/phase/reveal-phase/reveal-phase.component.html","./src/app/phase/started-phase/started-phase.component.ts","./src/app/phase/started-phase/started-phase.component.html","./src/app/phase/voting-phase/voting-phase.component.ts","./src/app/phase/voting-phase/voting-phase.component.html","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/search/search.service.ts","./src/app/services/firebase/firebase.service.ts","./src/app/services/user/user.service.ts","./src/app/session/add-category/add-category.component.ts","./src/app/session/add-category/add-category.component.html","./src/app/session/add-pick/add-pick.component.ts","./src/app/session/add-pick/add-pick.component.html","./src/app/session/add-session/add-session.component.ts","./src/app/session/add-session/add-session.component.html","./src/app/session/join-session/join-session.component.ts","./src/app/session/join-session/join-session.component.html","./src/app/session/session-admin/session-admin.component.ts","./src/app/session/session-admin/session-admin.component.html","./src/app/session/session-details/session-details.component.ts","./src/app/session/session-details/session-details.component.html","./src/app/session/session.service.ts","./src/app/session/show-all-categories/show-all-categories.component.ts","./src/app/session/show-all-categories/show-all-categories.component.html","./src/app/session/show-all-sessions/show-all-sessions.component.ts","./src/app/session/show-all-sessions/show-all-sessions.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SessionDetailsComponent } from './session/session-details/session-details.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: HomeComponent,\r\n    },\r\n    {\r\n        path: 'login',\r\n        loadChildren: () =>\r\n            import('./auth/auth.module').then((m) => m.AuthModule),\r\n    },\r\n    {\r\n        path: 'sessions/:sessionId',\r\n        component: SessionDetailsComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { UserService } from './services/user/user.service';\r\n\r\n@Component({\r\n    selector: 'rbc-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n    navbarOpen = false;\r\n    loggedIn$: Observable<boolean>;\r\n    authorizedUser$: any;\r\n\r\n    constructor(private authService: AuthService, private userService: UserService) {}\r\n\r\n    ngOnInit() {\r\n        this.loggedIn$ = this.authService.authorized$;\r\n        this.authService.checkAuthStatus();\r\n        this.authorizedUser$ = this.authService.authorized$.pipe(\r\n            switchMap((authorized) => (authorized ? this.userService.getUser() : of(null)))\r\n        );\r\n    }\r\n\r\n    login() {\r\n        this.authService.authorize();\r\n    }\r\n\r\n    logout() {\r\n        this.authService.logout();\r\n    }\r\n}\r\n","<div class=\"wrapper\">\r\n    <div id=\"content\">\r\n        <nav class=\"navbar navbar-expand-lg\">\r\n            <img src=\"../../assets//images/rogue-beats-white.png\" height=\"125\" alt=\"\" [routerLink]=\"'/'\" />\r\n            <ul class=\"list-unstyled\">\r\n                <li *ngIf=\"authorizedUser$ | async as user\" id=\"welcome-user\">\r\n                    <div>Welcome back, {{ user.display_name }}!</div>\r\n                </li>\r\n                <li>\r\n                    <ng-container *ngIf=\"loggedIn$ | async; else showLogin\">\r\n                        <a class=\"btn btn-filled accent\" (click)=\"logout()\">Logout</a>\r\n                    </ng-container>\r\n                    <ng-template #showLogin>\r\n                        <a class=\"btn btn-filled accent\" (click)=\"login()\">Login</a>\r\n                    </ng-template>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n\r\n        <div class=\"text-center placeholder\">\r\n            <div *ngIf=\"!(loggedIn$ | async)\">\r\n                <p>To take advantage of rogue beats, you need to <a (click)=\"login()\">authorize the app</a> through\r\n                Spotify.</p>\r\n                <div><a class=\"button mt-2\" (click)=\"login()\">Login</a></div>\r\n            </div>\r\n\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n\r\n    \r\n</div>\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { AddCategoryComponent } from './session/add-category/add-category.component';\r\nimport { AddPickComponent } from './session/add-pick/add-pick.component';\r\nimport { AddSessionComponent } from './session/add-session/add-session.component';\r\nimport { JoinSessionComponent } from './session/join-session/join-session.component';\r\nimport { SessionDetailsComponent } from './session/session-details/session-details.component';\r\nimport { ShowAllCategoriesComponent } from './session/show-all-categories/show-all-categories.component';\r\nimport { ShowAllSessionsComponent } from './session/show-all-sessions/show-all-sessions.component';\r\nimport { OpenPhaseComponent } from './phase/open-phase/open-phase.component';\r\nimport { StartedPhaseComponent } from './phase/started-phase/started-phase.component';\r\nimport { VotingPhaseComponent } from './phase/voting-phase/voting-phase.component';\r\nimport { RevealPhaseComponent } from './phase/reveal-phase/reveal-phase.component';\r\nimport { SessionAdminComponent } from './session/session-admin/session-admin.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        HomeComponent,\r\n        SearchComponent,\r\n        AddSessionComponent,\r\n        ShowAllSessionsComponent,\r\n        SessionDetailsComponent,\r\n        JoinSessionComponent,\r\n        AddCategoryComponent,\r\n        ShowAllCategoriesComponent,\r\n        AddPickComponent,\r\n        OpenPhaseComponent,\r\n        StartedPhaseComponent,\r\n        VotingPhaseComponent,\r\n        RevealPhaseComponent,\r\n        SessionAdminComponent,\r\n    ],\r\n    imports: [BrowserModule, AppRoutingModule, NgbModule, HttpClientModule, FormsModule, ReactiveFormsModule],\r\n    providers: [],\r\n    bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport { LOCAL_STORAGE, StorageService } from 'ngx-webstorage-service';\r\nimport { throwError, timer, Observable, Subject, ReplaySubject } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ScopesBuilder } from './models/scopes-builder';\r\nimport { SpotifyAuthResponse } from './models/spotify-auth-response';\r\nimport { TokenService } from './token.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n    private requestAuthUrl = 'https://accounts.spotify.com/authorize';\r\n    private tokenUrl = 'https://accounts.spotify.com/api/token';\r\n\r\n    // tslint:disable: variable-name\r\n    private _authorized = new ReplaySubject<boolean>();\r\n    public authorized$: Observable<boolean> = this._authorized.asObservable();\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private token: TokenService,\r\n        @Inject(LOCAL_STORAGE) private storage: StorageService\r\n    ) {}\r\n\r\n    authorize() {\r\n        this.fullAuthFlow();\r\n    }\r\n\r\n    logout() {\r\n        this.token.clearToken();\r\n        this._authorized.next(false);\r\n    }\r\n\r\n    async getAccessToken(code: string, state: string) {\r\n        if (state !== this.storage.get('state')) {\r\n            throwError('Invalid state');\r\n            return;\r\n        }\r\n\r\n        const payload = new HttpParams()\r\n            .append('client_id', environment.spotifyClientId)\r\n            .append('grant_type', 'authorization_code')\r\n            .append('code', code)\r\n            .append('redirect_uri', environment.spotifyRedirect)\r\n            .append('code_verifier', this.storage.get('codeVerifier'));\r\n\r\n        const response = await this.requestToken(payload);\r\n        this.setRefreshTimer(response.expires_in);\r\n        this._authorized.next(true);\r\n    }\r\n\r\n    checkAuthStatus() {\r\n        if (!this.token.refreshToken) {\r\n            this._authorized.next(false);\r\n        } else if (this.token.expired) {\r\n            this.refreshToken();\r\n        } else {\r\n            this._authorized.next(true);\r\n        }\r\n    }\r\n\r\n    async refreshToken() {\r\n        const payload = new HttpParams()\r\n            .append('grant_type', 'refresh_token')\r\n            .append('refresh_token', this.token.refreshToken)\r\n            .append('client_id', environment.spotifyClientId);\r\n\r\n        const response = await this.requestToken(payload);\r\n        this.setRefreshTimer(response.expires_in);\r\n        this._authorized.next(true);\r\n        return;\r\n    }\r\n\r\n    private fullAuthFlow() {\r\n        const state = this.strRandom(40);\r\n        const codeVerifier = this.strRandom(128);\r\n        this.storage.set('state', state);\r\n        this.storage.set('codeVerifier', codeVerifier);\r\n        const codeVerifierHash = CryptoJS.SHA256(codeVerifier).toString(CryptoJS.enc.Base64);\r\n        const codeChallenge = codeVerifierHash.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\r\n\r\n        const params = [\r\n            'client_id=' + environment.spotifyClientId,\r\n            'response_type=code',\r\n            'redirect_uri=' + encodeURIComponent(environment.spotifyRedirect),\r\n            'code_challenge_method=S256',\r\n            'code_challenge=' + codeChallenge,\r\n            'state=' + state,\r\n            'scope=' + new ScopesBuilder().build(),\r\n        ];\r\n        window.location.href = this.requestAuthUrl + '?' + params.join('&');\r\n    }\r\n\r\n    private async setRefreshTimer(expiresIn: number) {\r\n        timer(expiresIn * 1000).subscribe(() => {\r\n            console.log('Token expiring, refreshing');\r\n            this.refreshToken();\r\n        });\r\n    }\r\n\r\n    private async requestToken(payload: HttpParams): Promise<SpotifyAuthResponse> {\r\n        const options = {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n        };\r\n\r\n        const response = await this.http.post<SpotifyAuthResponse>(this.tokenUrl, payload, options).toPromise();\r\n\r\n        this.token.setAuthToken(response);\r\n\r\n        return response;\r\n    }\r\n\r\n    private strRandom(length: number) {\r\n        let result = '';\r\n        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        const charactersLength = characters.length;\r\n        for (let i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","import { SpotifyScope } from './spotify-scope';\r\n\r\nexport class ScopesBuilder {\r\n\r\n    public static USERS: { [name: string]: SpotifyScope } = {\r\n        READ_PRIVATE: 'user-read-private',\r\n        READ_EMAIL: 'user-read-email'\r\n    };\r\n\r\n    public static PLAYLISTS: { [name: string]: SpotifyScope } = {\r\n        READ_PRIVATE: 'playlist-read-private',\r\n        MODIFY_PRIVATE: 'playlist-modify-private',\r\n        MODIFY_PPUBLIC: 'playlist-modify-public',\r\n        READ_COLLABORATIVE: 'playlist-read-collaborative'\r\n    };\r\n\r\n    public static HISTORY: { [name: string]: SpotifyScope } = {\r\n        TOP_READ: 'user-top-read',\r\n        READ_RECENTLY_PLAYED: 'user-read-recently-played'\r\n    };\r\n\r\n    public static LIBRARY: { [name: string]: SpotifyScope } = {\r\n        READ: 'user-library-read',\r\n        MODIFY: 'user-library-modify'\r\n    };\r\n\r\n    public static CONNECT: { [name: string]: SpotifyScope } = {\r\n        READ_CURRENTLY_PLAYING: 'user-read-currently-playing',\r\n        MODIFY_PLAYBACK_STATE: 'user-modify-playback-state',\r\n        READ_PLAYBACK_STATE: 'user-read-playback-state'\r\n    };\r\n\r\n    public static FOLLOW: { [name: string]: SpotifyScope } = {\r\n        READ: 'user-follow-read',\r\n        MODIFY: 'user-follow-modify'\r\n    };\r\n\r\n    public static PLAYBACK: { [name: string]: SpotifyScope } = {\r\n        STREAMING: 'streaming'\r\n    };\r\n\r\n    private scopes: ({ [name: string]: SpotifyScope } | SpotifyScope)[] = [\r\n        ScopesBuilder.USERS,\r\n        ScopesBuilder.PLAYLISTS\r\n    ];\r\n\r\n    /**\r\n     *\r\n     * @param args [] means no particular scopes or public only\r\n     */\r\n    public withScopes(...args: ({ [name: string]: SpotifyScope } | SpotifyScope)[]): ScopesBuilder {\r\n        this.scopes = args;\r\n        return this;\r\n    }\r\n\r\n    public build(): string {\r\n\r\n        const buffer: string[] = [];\r\n\r\n        this.scopes.forEach(scope => {\r\n\r\n            if (typeof (scope) === 'string') {\r\n                buffer.push(scope);\r\n            } else {\r\n                Object.keys(scope).forEach((property) => buffer.push(scope[property]));\r\n            }\r\n        });\r\n\r\n        return buffer.join(' ');\r\n    }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { SpotifyAuthResponse } from './models/spotify-auth-response';\r\nimport { LOCAL_STORAGE, StorageService } from 'ngx-webstorage-service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class TokenService {\r\n    private access: string;\r\n    private refresh: string;\r\n    private expireTime: number;\r\n\r\n    constructor(@Inject(LOCAL_STORAGE) private storage: StorageService) {}\r\n\r\n    public get accessToken(): string {\r\n        return this.access ? this.access : this.storage.get('access');\r\n    }\r\n\r\n    public get refreshToken(): string {\r\n        return this.refresh ? this.refresh : this.storage.get('refresh');\r\n    }\r\n\r\n    public get expired(): boolean {\r\n        const expiresIn = this.expireTime ? this.expireTime : this.storage.get('expire_time');\r\n        return expiresIn < new Date().getTime();\r\n    }\r\n\r\n    public clearToken(): void {\r\n        this.access = null;\r\n        this.refresh = null;\r\n        this.storage.clear();\r\n    }\r\n\r\n    public get authHeader(): { [name: string]: string } {\r\n        return this.access ? { Authorization: `Bearer ${this.access}` } : {};\r\n    }\r\n\r\n    public setAuthToken(spotifyResponse: SpotifyAuthResponse) {\r\n        if (spotifyResponse.access_token && spotifyResponse.refresh_token) {\r\n            this.storage.set('access', spotifyResponse.access_token);\r\n            this.access = spotifyResponse.access_token;\r\n            this.storage.set('refresh', spotifyResponse.refresh_token);\r\n            this.refresh = spotifyResponse.refresh_token;\r\n\r\n            const timeObj = new Date();\r\n            timeObj.setSeconds(timeObj.getSeconds() + spotifyResponse.expires_in);\r\n\r\n            this.storage.set('expire_time', timeObj.getTime());\r\n            this.expireTime = timeObj.getTime();\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { UserService } from '../services/user/user.service';\r\nimport { of } from 'rxjs';\r\nimport { User } from '../services/user/user';\r\n\r\n@Component({\r\n    selector: 'rbc-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    public authorizedUser$;\r\n    public activePanel: string;\r\n\r\n    constructor(private auth: AuthService, private userService: UserService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.authorizedUser$ = this.auth.authorized$.pipe(\r\n            switchMap((authorized) => (authorized ? this.userService.getUser() : of(null)))\r\n        );\r\n    }\r\n}\r\n","<div *ngIf=\"authorizedUser$ | async as user\">\r\n    <div class=\"rbc-card\">\r\n        <div class=\"card-label\">\r\n            Main Menu\r\n        </div>\r\n        <div class=\"accordion-container card-content\">\r\n            <button class=\"accordion\" (click)=\"activePanel = 'create'\" [ngClass]=\"{'active': activePanel === 'create'}\">Create Session</button>\r\n            <div class=\"panel\" *ngIf=\"activePanel === 'create'\">\r\n                <rbc-add-session></rbc-add-session>\r\n            </div>\r\n    \r\n            <button class=\"accordion\" (click)=\"activePanel = 'join'\" [ngClass]=\"{'active': activePanel === 'join'}\">Join Session</button>\r\n            <div class=\"panel\" *ngIf=\"activePanel === 'join'\">\r\n                <rbc-join-session></rbc-join-session>\r\n            </div>\r\n    \r\n            <button class=\"accordion\" (click)=\"activePanel = 'howTo'\" [ngClass]=\"{'active': activePanel === 'howTo'}\">How to Play</button>\r\n            <div class=\"panel\" *ngIf=\"activePanel === 'howTo'\">\r\n                <p>Rogue Beats is a thing</p>\r\n                <p>and to use it, you should do some things</p>\r\n                <p>and then everyone is happy.</p>\r\n            </div>\r\n        </div>  \r\n    </div>\r\n            \r\n</div>\r\n","import { User } from '../services/user/user';\r\n\r\nexport class Session {\r\n    constructor(name: string, phase: SessionPhase, admin: User) {\r\n        this.name = name;\r\n        this.admin = admin;\r\n        this.phase = phase;\r\n    }\r\n\r\n    public name: string;\r\n    public admin: User;\r\n    public phase: SessionPhase;\r\n}\r\n\r\nexport enum SessionPhase {\r\n    Open,\r\n    Started,\r\n    Voting,\r\n    Reveal\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'rbc-open-phase',\r\n    templateUrl: './open-phase.component.html',\r\n    styleUrls: ['./open-phase.component.scss'],\r\n})\r\nexport class OpenPhaseComponent implements OnInit {\r\n    @Input() sessionId;\r\n\r\n    constructor() {}\r\n\r\n    ngOnInit(): void {}\r\n}\r\n","<div class=\"category-section rbc-card\">\r\n    <div class=\"card-column card-label\">\r\n        Categories\r\n    </div>\r\n    <div class=\"card-column card-content\">\r\n        <div>\r\n            <rbc-show-all-categories [sessionId]=\"sessionId\"></rbc-show-all-categories>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'rbc-reveal-phase',\n  templateUrl: './reveal-phase.component.html',\n  styleUrls: ['./reveal-phase.component.scss']\n})\nexport class RevealPhaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>reveal-phase works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'rbc-started-phase',\n  templateUrl: './started-phase.component.html',\n  styleUrls: ['./started-phase.component.scss']\n})\nexport class StartedPhaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>started-phase works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'rbc-voting-phase',\n  templateUrl: './voting-phase.component.html',\n  styleUrls: ['./voting-phase.component.scss']\n})\nexport class VotingPhaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>voting-phase works!</p>\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { SearchService } from './search.service';\r\nimport { fromEvent, Observable, of, timer } from 'rxjs';\r\nimport { catchError, debounceTime, distinctUntilChanged, filter, map, switchMap, tap, timeout } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'rbc-search',\r\n    templateUrl: './search.component.html',\r\n    styleUrls: ['./search.component.scss'],\r\n})\r\nexport class SearchComponent implements AfterViewInit {\r\n    @ViewChild('searchBox') searchInput: ElementRef;\r\n    @Output() pick = new EventEmitter();\r\n    result$: Observable<any>;\r\n\r\n    loading: boolean;\r\n    errored: boolean;\r\n\r\n    constructor(private searchService: SearchService, private change: ChangeDetectorRef) {}\r\n\r\n    ngAfterViewInit(): void {\r\n        //this.searchInput.nativeElement.focus();\r\n\r\n        (this.result$ = fromEvent<any>(this.searchInput.nativeElement, 'keyup').pipe(\r\n            map((event) => event.target.value),\r\n            debounceTime(250),\r\n            filter((term) => term),\r\n            distinctUntilChanged(),\r\n            tap(() => (this.loading = true)),\r\n            switchMap(\r\n                (query) => this.searchService.search(query)\r\n                // .pipe(\r\n                //     timeout(2500),\r\n                //     catchError((err) => {\r\n                //         this.errored = true;\r\n                //         timer(2000).subscribe(() => (this.errored = false));\r\n                //         return of(null);\r\n                //     })\r\n            )\r\n        )),\r\n            tap(() => (this.loading = false));\r\n\r\n        this.change.detectChanges();\r\n    }\r\n\r\n    pickSong(songId: string) {\r\n        this.pick.emit(songId);\r\n    }\r\n}\r\n","<div>\r\n    <div>\r\n        <input #searchBox class=\"input is-large is-info\" type=\"text\" placeholder=\"Search ...\" />\r\n    </div>\r\n\r\n    <div class=\"error is-error\" *ngIf=\"errored\">\r\n        Failed to search spotify.\r\n    </div>\r\n\r\n    <div class=\"search-results\" *ngIf=\"result$ | async as result\">\r\n      <div *ngFor=\"let item of result.tracks.items\">\r\n          <input type=\"button\" value=\"Pick\" (click)=\"pickSong(item.id)\" />\r\n          <a href=\"{{item.preview_url}}\" target=\"_blank\">{{item.name}}</a> by {{item.artists[0].name}}\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { retryWhen } from 'rxjs/operators';\r\nimport { TokenService } from '../auth/token.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class SearchService {\r\n    private requestAuthUrl = 'https://api.spotify.com/v1/search?type=track&q=';\r\n\r\n    constructor(private http: HttpClient, private token: TokenService) {}\r\n\r\n    public async search(query: string): Promise<any> {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                Authorization: 'Bearer ' + this.token.accessToken,\r\n            }),\r\n        };\r\n        // want%20it%20that%20way\r\n        return this.http\r\n            .get(this.requestAuthUrl + encodeURI(query), options)\r\n            .toPromise();\r\n    }\r\n    // public async getUser(): Promise<User> {\r\n    //   const options = {\r\n    //     headers: new HttpHeaders({ Authorization: 'Bearer ' + this.token.oAuthToken })\r\n    //   };\r\n\r\n  // search(name: string): Observable<any> {\r\n  //   const options = {\r\n  //     headers: new HttpHeaders({ Authorization: 'Bearer ' + this.token.oAuthToken })\r\n  //   };\r\n\r\n  //   return this.http\r\n  //       .get<any>(this.requestAuthUrl + encodeURI(name), options);\r\n  //       //.pipe(retryWhen(genericRetryStrategy({ maxRetryAttempts: 2, scalingDuration: 500 })));\r\n  // }\r\n    //   if (!this.user) {\r\n    //     this.user = await this.http.get<User>(this.requestAuthUrl, options).toPromise();\r\n    //   }\r\n\r\n    //   return this.user;\r\n    // }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class FirebaseService {\r\n    public url = 'https://rogue-beats-b003b.firebaseio.com';\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    post<T>(route: string, data: any): Observable<T> {\r\n        return this.http.post<T>(`${this.url}/${route}`, data);\r\n    }\r\n\r\n    put<T>(route: string, data: any): Observable<T> {\r\n        return this.http.put<T>(`${this.url}/${route}`, data);\r\n    }\r\n\r\n    get<T>(route: string): Observable<T> {\r\n        return this.http.get<T>(`${this.url}/${route}`);\r\n    }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { TokenService } from '../../auth/token.service';\r\nimport { User } from './user';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class UserService {\r\n    private requestAuthUrl = 'https://api.spotify.com/v1/me';\r\n    private user: User;\r\n\r\n    constructor(private http: HttpClient, private token: TokenService) {}\r\n\r\n    public async getUser(): Promise<User> {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                Authorization: 'Bearer ' + this.token.accessToken,\r\n            }),\r\n        };\r\n\r\n        if (!this.user) {\r\n            this.user = await this.http.get<User>(this.requestAuthUrl, options).toPromise();\r\n        }\r\n\r\n        return this.user;\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Category } from '../../models/category';\r\nimport { SessionService } from '../session.service';\r\n\r\n@Component({\r\n    selector: 'rbc-add-category',\r\n    templateUrl: './add-category.component.html',\r\n    styleUrls: ['./add-category.component.scss'],\r\n})\r\nexport class AddCategoryComponent implements OnInit {\r\n    @Input() sessionId: string;\r\n    errorMessage: string = '';\r\n    category = '';\r\n\r\n    constructor(private session: SessionService, private change: ChangeDetectorRef) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    addCategory() {\r\n        const result = this.session.addCategory(this.sessionId, { category: this.category } as Category);\r\n        console.log(this.session);\r\n        this.category = '';\r\n        this.change.detectChanges();\r\n    }\r\n}\r\n","<div>\r\n  <label>\r\n    <input type=\"text\" [(ngModel)]=\"category\" placeholder=\"Category Description\" #categoryInput/>\r\n  </label>\r\n  <div *ngIf=\"errorMessage\">\r\n    {{ errorMessage }}\r\n  </div>\r\n\r\n  <div>\r\n    <button class=\"btn btn-outline accent\" type=\"submit\" (click)=\"addCategory(); categoryInput.value = ''\">Add Category</button>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\r\nimport { SongPick } from '../../models/song-pick';\r\nimport { User } from '../../services/user/user';\r\nimport { UserService } from '../../services/user/user.service';\r\nimport { SessionService } from '../session.service';\r\n\r\n@Component({\r\n    selector: 'rbc-add-pick',\r\n    templateUrl: './add-pick.component.html',\r\n    styleUrls: ['./add-pick.component.scss'],\r\n})\r\nexport class AddPickComponent implements OnInit {\r\n    @Input() sessionId: string;\r\n    @Input() questionId: string;\r\n    pickExists = false;\r\n    public loading: boolean;\r\n    public user: User;\r\n\r\n    constructor(private sessionService: SessionService, private userService: UserService, private changeRef: ChangeDetectorRef) {}\r\n\r\n    async ngOnInit() {\r\n        this.loading = true;\r\n\r\n        this.user = await this.userService.getUser();\r\n\r\n        const songPicks = await this.sessionService.getSongPicks(this.sessionId);\r\n\r\n        for (const key in songPicks) {\r\n          if (Object.prototype.hasOwnProperty.call(songPicks, key)) {\r\n            const value = songPicks[key];\r\n            if (value?.questionId === this.questionId && value?.user?.id === this.user.id) {\r\n              this.pickExists = true;\r\n            }\r\n          }\r\n        }\r\n        this.loading = false;\r\n        this.changeRef.detectChanges();\r\n    }\r\n\r\n    get isLoading(){\r\n      return this.loading;\r\n  }\r\n\r\n  set isLoading(loading){\r\n      this.loading = loading;\r\n  }\r\n\r\n    pickSong(songId: string) {\r\n        this.sessionService.addSongPick(this.sessionId, { questionId: this.questionId, songId: songId, user: this.user } as SongPick);\r\n        this.pickExists = true;\r\n    }\r\n}\r\n","<div class=\"add-pick\">\r\n    <div *ngIf=\"isLoading\">\r\n      Loading...\r\n    </div>\r\n    <div *ngIf=\"isLoading == false\">\r\n        <div *ngIf=\"pickExists\">\r\n            You've submitted a pick for this question.\r\n            <br/>\r\n        </div>\r\n        <div *ngIf=\"!pickExists\">\r\n            <rbc-search (pick)=\"pickSong($event)\"></rbc-search>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { Session, SessionPhase } from '../../models/session';\r\nimport { UserService } from '../../services/user/user.service';\r\nimport { SessionService } from '../session.service';\r\n\r\n@Component({\r\n    selector: 'rbc-add-session',\r\n    templateUrl: './add-session.component.html',\r\n    styleUrls: ['./add-session.component.scss'],\r\n})\r\nexport class AddSessionComponent implements OnInit {\r\n    addSessionForm = new FormGroup({\r\n        name: new FormControl(''),\r\n    });\r\n\r\n    sessionLink: string;\r\n\r\n    constructor(\r\n        private sessionService: SessionService,\r\n        private userService: UserService,\r\n        private change: ChangeDetectorRef\r\n    ) {}\r\n\r\n    ngOnInit() {}\r\n\r\n    async createSession() {\r\n        const admin = await this.userService.getUser();\r\n\r\n        const session = new Session(this.addSessionForm.value.name, SessionPhase.Open, admin);\r\n\r\n        const response = await this.sessionService.createSession(session);\r\n\r\n        this.sessionLink = `http://localhost:4432/sessions/${response}`;\r\n\r\n        this.change.detectChanges();\r\n    }\r\n}\r\n","<form [formGroup]=\"addSessionForm\" (ngSubmit)=\"createSession()\" class=\"mb-4\">\r\n    <label>\r\n        Name:\r\n        <input type=\"text\" formControlName=\"name\"/>\r\n    </label>\r\n\r\n    <div>\r\n        <button class=\"btn button\" type=\"submit\" [disabled]=\"!addSessionForm.valid\">Create Session</button>\r\n    </div>\r\n</form>\r\n\r\n<p class=\"mt-4\" *ngIf=\"sessionLink\">\r\n  Session Link: <a href=\"{{ sessionLink }}\">{{ sessionLink }}</a>\r\n</p>\r\n\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UserService } from '../../services/user/user.service';\r\nimport { SessionService } from '../session.service';\r\n\r\n@Component({\r\n    selector: 'rbc-join-session',\r\n    templateUrl: './join-session.component.html',\r\n    styleUrls: ['./join-session.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class JoinSessionComponent {\r\n    form = new FormGroup({\r\n        code: new FormControl('', Validators.required),\r\n    });\r\n\r\n    public errorMessage: string;\r\n\r\n    constructor(private sessionService: SessionService,\r\n                private userService: UserService,\r\n                private router: Router,\r\n                private changeRef: ChangeDetectorRef) { }\r\n\r\n    async submit() {\r\n        this.errorMessage = '';\r\n        if (this.form.valid) {\r\n            const sessionId = this.form.value.code;\r\n\r\n            try {\r\n                const user = await this.userService.getUser();\r\n                await this.sessionService.addParticipant(sessionId, user);\r\n                this.router.navigate(['sessions/', sessionId]);\r\n            }\r\n            catch (error) {\r\n                this.errorMessage = error;\r\n            }\r\n\r\n            this.changeRef.detectChanges();\r\n        }\r\n    }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"mb-4\">\r\n    <input type=\"text\" formControlName=\"code\" placeholder=\"Session Code\" />\r\n\r\n    <div>\r\n        <button class=\"btn button\" type=\"submit\" [disabled]=\"!form.valid\">Join Session</button>\r\n    </div>\r\n\r\n    <div class=\"error\" *ngIf=\"errorMessage\">\r\n        {{errorMessage}}\r\n    </div>\r\n</form>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'rbc-session-admin',\r\n  templateUrl: './session-admin.component.html',\r\n  styleUrls: ['./session-admin.component.scss']\r\n})\r\nexport class SessionAdminComponent implements OnInit {\r\n\r\n  @Input() sessionId: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"admin-section rbc-card\">\r\n  <!-- todo: move to game admin component -->\r\n  <div class=\"card-column card-label\">\r\n      Admin\r\n  </div>\r\n  <div class=\"card-column card-content\">\r\n      <div class=\"add-category\">\r\n          <rbc-add-category [sessionId]=\"sessionId\"></rbc-add-category>\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnChanges, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { SessionPhase } from '../../models/session';\r\nimport { User } from '../../services/user/user';\r\nimport { UserService } from '../../services/user/user.service';\r\nimport { FbSession, SessionService } from '../session.service';\r\n\r\n@Component({\r\n    selector: 'rbc-details',\r\n    templateUrl: './session-details.component.html',\r\n    styleUrls: ['./session-details.component.scss']\r\n})\r\nexport class SessionDetailsComponent implements OnInit {\r\n    public results: FbSession;\r\n    public sessionId: string;\r\n    public user: User;\r\n    public phase = SessionPhase;\r\n    public userLoaded = false;\r\n\r\n    constructor(private sessionService: SessionService, private route: ActivatedRoute, private userService: UserService)  {\r\n        this.route.params.subscribe(params => {\r\n            this.sessionId = params.sessionId;\r\n            this.getSession();\r\n        });\r\n    }\r\n\r\n    async ngOnInit() {\r\n      this.user = await this.userService.getUser();\r\n      //console.log(this.user);\r\n      this.userLoaded = true;\r\n    }\r\n\r\n    async getSession() {\r\n        this.results = await this.sessionService.getSession(this.sessionId);\r\n        //console.log(this.results);\r\n    }\r\n}\r\n","<div *ngFor=\"let session of results | keyvalue\">\r\n    <div class=\"session-details rbc-card\">\r\n        <div class=\"card-column card-label\">\r\n            Details\r\n        </div>\r\n        <div class=\"card-column card-content\">\r\n            <p><span class=\"detail-label\">Session Name:</span> {{ session.value.name }}</p>\r\n            <p><span class=\"detail-label\">Created By:</span> {{ session.value.admin?.display_name }}</p>\r\n            <p><span class=\"detail-label\">Session ID:</span> {{ session.key }}</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"userLoaded\">\r\n        <rbc-session-admin [sessionId]=\"sessionId\" *ngIf=\"user?.id === session.value?.admin?.id\"></rbc-session-admin>\r\n\r\n        <ng-container [ngSwitch]=\"session.value.phase\">\r\n            <div *ngSwitchDefault>\r\n                <rbc-open-phase [sessionId]=\"sessionId\"></rbc-open-phase>\r\n            </div>\r\n\r\n            <div *ngSwitchCase=\"phase.Started\">\r\n                <span>asks you to submit for the categories (rbc-show-all-categories)</span>\r\n                <rbc-started-phase></rbc-started-phase>\r\n            </div>\r\n\r\n            <div *ngSwitchCase=\"phase.Voting\">\r\n                <span>Asks you to vote for who submitted what</span>\r\n                <rbc-voting-phase></rbc-voting-phase>\r\n            </div>\r\n\r\n            <div *ngSwitchCase=\"phase.Reveal\">\r\n                <span>Shows each submission with your guess and the correct answer</span>\r\n                <rbc-reveal-phase></rbc-reveal-phase>\r\n            </div>\r\n        </ng-container>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { FirebaseService } from '../services/firebase/firebase.service';\r\nimport { Session } from '../models/session';\r\nimport { Category } from '../models/category';\r\nimport { SongPick } from '../models/song-pick';\r\nimport { User } from '../services/user/user';\r\nimport { FbResponse } from '../models/fb-response';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class SessionService {\r\n    private route = 'sessions.json';\r\n    firebaseResponse: { name: string };\r\n\r\n    constructor(private firebaseService: FirebaseService) { }\r\n\r\n    public async createSession(session: Session) {\r\n        await this.firebaseService\r\n            .post(this.route, session)\r\n            .toPromise()\r\n            .then((response) => {\r\n                console.log(response);\r\n                this.firebaseResponse = (response as FbResponse);\r\n                console.log(this.firebaseResponse);\r\n            });\r\n\r\n        return this.firebaseResponse.name;\r\n    }\r\n\r\n    // todo:  each different json could/should be its own service.  eg.  games, picks, sessions, categories\r\n    public async addCategory(sessionId: string, category: Category) {\r\n        const route = `games/${sessionId}/categories.json`;\r\n\r\n        await this.firebaseService\r\n            .post(route, category)\r\n            .toPromise()\r\n            .then((response) => {\r\n                this.firebaseResponse = (response as FbResponse);\r\n            });\r\n\r\n        return this.firebaseResponse.name;\r\n    }\r\n\r\n    public async addSongPick(sessionId: string, songPick: SongPick) {\r\n        const route = `games/${sessionId}/picks.json`;\r\n\r\n        await this.firebaseService\r\n            .post(route, songPick)\r\n            .toPromise()\r\n            .then((response) => {\r\n                this.firebaseResponse = (response as FbResponse);\r\n            });\r\n\r\n        return this.firebaseResponse.name;\r\n    }\r\n\r\n    public async addParticipant(sessionId: string, participant: User) {\r\n        const validSess = await this.getSession(sessionId);\r\n        if (validSess[sessionId]) {\r\n            const route = `games/${sessionId}/participants.json`;\r\n            return this.firebaseService.post<string>(route, participant).toPromise();\r\n        } else {\r\n            throw new Error(('Session not found'));\r\n        }\r\n    }\r\n\r\n    public async getSessions() {\r\n        return await this.firebaseService.get<FbSession>(this.route).toPromise();\r\n    }\r\n\r\n    public async getCategories(sessionId: string) {\r\n        const route = `games/${sessionId}/categories.json`;\r\n\r\n        return await this.firebaseService.get<FbCategory>(route).toPromise();\r\n    }\r\n\r\n    public async getSongPicks(sessionId: string) {\r\n        const route = `games/${sessionId}/picks.json`;\r\n\r\n        return await this.firebaseService.get<FbSongPick>(route).toPromise();\r\n    }\r\n\r\n    public getSession(sessionId): Promise<FbSession> {\r\n        const route = `${this.route}?orderBy=\"$key\"&startAt=\"${sessionId}\"&endAt=\"${sessionId}\"&print=pretty`;\r\n        return this.firebaseService.get<FbSession>(route).toPromise();\r\n    }\r\n}\r\n\r\nexport interface FbSession {\r\n    [id: string]: Session;\r\n}\r\n\r\nexport interface FbCategory {\r\n  [id: string]: Category;\r\n}\r\n\r\nexport interface FbSongPick {\r\n  [id: string]: SongPick;\r\n}\r\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\r\nimport { SessionService } from '../session.service';\r\n\r\n@Component({\r\n    selector: 'rbc-show-all-categories',\r\n    templateUrl: './show-all-categories.component.html',\r\n    styleUrls: ['./show-all-categories.component.scss'],\r\n})\r\nexport class ShowAllCategoriesComponent implements OnInit {\r\n    @Input() sessionId: string;\r\n    categories: any;\r\n    searched = false;\r\n\r\n    constructor(private sessionService: SessionService, private change: ChangeDetectorRef) {}\r\n\r\n    async ngOnInit() {\r\n        this.categories = await this.sessionService.getCategories(this.sessionId);\r\n        this.searched = true;\r\n        this.change.detectChanges();\r\n    }\r\n}\r\n","<div>\r\n    <div *ngIf=\"searched\" class=\"all-sessions\">\r\n        <div *ngFor=\"let session of categories | keyvalue\" class=\"category\">\r\n            <p class=\"category-label\">{{session.value.category ? session.value.category : '**Empty**'}}</p>\r\n            <rbc-add-pick [sessionId]=\"sessionId\" [questionId]=\"session.key\"></rbc-add-pick>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Session } from 'src/app/models/session';\r\nimport { SessionService } from '../session.service';\r\n\r\n@Component({\r\n    selector: 'rbc-show-all-sessions',\r\n    templateUrl: './show-all-sessions.component.html',\r\n    styleUrls: ['./show-all-sessions.component.scss'],\r\n})\r\nexport class ShowAllSessionsComponent implements OnInit {\r\n    constructor(private sessionService: SessionService) {}\r\n\r\n    public results: any;\r\n    public searched = false;\r\n\r\n    ngOnInit(): void {}\r\n\r\n    async getSessions() {\r\n        // The type of results:  <{ [id: string]: Session }>\r\n        this.results = await this.sessionService.getSessions();\r\n        this.searched = true;\r\n    }\r\n}\r\n","<div *ngIf=\"!searched\">\r\n    <button class=\"btn button\" (click)=\"getSessions()\">Get All Sessions</button>\r\n</div>\r\n\r\n<div *ngIf=\"searched\" class=\"all-sessions\">\r\n    <div *ngFor=\"let session of results | keyvalue\">\r\n        <a href=\"/sessions/{{session.key}}\">\r\n        \"{{session.value.category}}\"</a> <br />\r\n        Created by {{session.value.admin?.display_name}}\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  spotifyClientId: '47b78bc5a97140f485f0a5ead97a2145',\r\n  spotifyRedirect: 'http://localhost:4432/login/authorized'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}